// Styles modifing the panels.

// Use default Bootstrap 3 panel classes.
//
// To have a panel with an arrow in it, set the class ``with-arrow`` on the
// panel.
//
// If you want to simulate the heading of an panel in your own element use the
// classes .like-panel and which type of panel with .like-panel-primary.

.panel {
  border: none;

  box-shadow: none;

  & > .panel-heading {
    color: white;
    border: none;
    padding: 14px 19px;

    h3 {
      text-transform: none;
      font-size: @font-size-h2;
      font-weight: normal;
    }
  }

  &.with-arrow > .panel-body {
    position: relative;
    padding-top: @panel-arrow-blue-height + 3px;
    &:before {
      // Add an arrow to all panels bodies.

      content: " ";
      display: table;

      position: absolute;
      top: 0;
      left: 50%;

      margin-left: -@panel-arrow-blue-width / 2;

      .sprite(@panel-arrow-blue);

    }
  }

  .panel-body {
    padding: 0;

    .panel-body-inner {
      padding: 10px 19px;
    }

    ul {
      padding: 0;
      margin: 0;
      border-radius: 0 0 4px 4px;
      background: white;
      list-style: none;

      li {
        border-bottom: 1px solid @brand-warmgray;
        padding: 7px 5px 11px 26px;

        a{
          font-size: 15px;
          color: @brand-blacknblue;
        }
      }
    }
  }
}

.panel-default > .panel-heading,
.like-panel.like-panel-default {
  #gradient > .vertical(@brand-lightblue, @brand-darkblue, 0%, 100%);
}

.panel-primary > .panel-heading,
.like-panel.like-panel-primary {
  #gradient > .vertical(@brand-lightgreen, @brand-darkgreen, 0%, 100%);
}
.panel-primary.with-arrow > .panel-body:before {
  .sprite(@panel-arrow-green);
}

.panel-blacknblue > .panel-heading,
.like-panel.like-panel-blacknblue {
  #gradient > .vertical(@gradient-light, @gradient-dark, 0%, 100%);
}
.panel-blacknblue.with-arrow > .panel-body:before {
  .sprite(@panel-arrow-darkblue);
}

.panel-success > .panel-heading,
.like-panel.like-panel-success {
  #gradient > .vertical(lighten(@panel-success-heading-bg, 5%), darken(@panel-success-heading-bg, 5%), 0%, 100%);
}
.panel-success.with-arrow > .panel-body:before {
  // .sprite(@panel-arrow-blue);
}

.panel-info > .panel-heading,
.like-panel.like-panel-info {
  #gradient > .vertical(lighten(@panel-info-heading-bg, 5%), darken(@panel-info-heading-bg, 5%), 0%, 100%);
}
.panel-info.with-arrow > .panel-body:before {
  // .sprite(@panel-arrow-blue);
}

.panel-warning > .panel-heading,
.like-panel.like-panel-warning {
  #gradient > .vertical(lighten(@panel-warning-heading-bg, 5%), darken(@panel-warning-heading-bg, 5%), 0%, 100%);
}
.panel-warning.with-arrow > .panel-body:before {
  // .sprite(@panel-arrow-blue);
}

.panel-danger > .panel-heading,
.like-panel.like-panel-danger {
  #gradient > .vertical(lighten(@panel-danger-heading-bg, 5%), darken(@panel-danger-heading-bg, 5%), 0%, 100%);
}
.panel-danger.with-arrow > .panel-body:before {
  // .sprite(@panel-arrow-blue);
}

.like-panel {
  &:extend(.panel > .panel-heading);
  &:extend(.panel);
}
